name: Build, Test, and Publish Docker Image

on:
  push:
    branches:
      - main
    paths:
      - "server/src/**"
      - "web/**"
  workflow_dispatch:
    inputs:
      IMAGE_NAME:
        description: 'The Docker image name'
        required: true
      SERVICE_ID:
        description: 'Id of koyeb service'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set image name
        id: image_name
        run: |
          if [ -z "${{ github.event.inputs.IMAGE_NAME }}" ]; then
            echo "IMAGE_NAME=${{ secrets.IMAGE_NAME }}" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${{ github.event.inputs.IMAGE_NAME }}" >> $GITHUB_ENV
          fi

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .

  test:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: web

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
          cache-dependency-path: web/pnpm-lock.yaml

      - run: pnpm install
      - run: pnpm cypress install

      - name: Create user-defined network
        run: docker network create backend_network

      - name: Start backend container
        run: |
          docker run -d --name backend --network backend_network -p 5005:5005 ${{ env.IMAGE_NAME }}
          sleep 5

      - name: Run migrations using .NET SDK container
        run: |
          docker run --rm \
            --network backend_network \
            -v ${{ github.workspace }}/server:/app \
            -w /app \
            mcr.microsoft.com/dotnet/sdk:8.0 bash -c "
              dotnet tool install --global dotnet-ef &&
              export PATH=\"/root/.dotnet/tools:\$PATH\" &&
              dotnet ef database update --project src
            "

      - name: Start the backend server
        run: docker exec -d backend dotnet run

      - name: Wait for the backend server to be ready
        run: |
          until curl --silent --fail localhost:5005; do
            sleep 1
          done

      - run: |
          nohup pnpm run dev &
          sleep 10

      - run: pnpm run test

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ success() }}

    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline