name: Publish Docker Image Dotnet

on:
  push:
    branches:
      - main
    paths:
      - "server/src/**"
      - "web/**"
  workflow_dispatch:
    inputs:
      IMAGE_NAME:
        description: 'The Docker image name'
        required: true
      SERVICE_ID:
        description: 'Id of koyeb service'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set image name
        id: image_name
        run: |
          if [ -z "${{ github.event.inputs.IMAGE_NAME }}" ]; then
            echo "IMAGE_NAME=${{ secrets.IMAGE_NAME }}" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${{ github.event.inputs.IMAGE_NAME }}" >> $GITHUB_ENV
          fi

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:latest
          cache-to: type=inline

  deploy-koyeb:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Redeploy Service
        env:
          KOYEB_API_TOKEN: ${{ secrets.KOYEB_API_TOKEN }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          SERVICE_ID: ${{ github.event.inputs.SERVICE_ID }}
        run: |
          set -e
          KOYEB_API_URL="https://app.koyeb.com/v1/services/${SERVICE_ID}/redeploy"
          if [ -z "$KOYEB_API_TOKEN" ]; then
            echo "KOYEB_API_TOKEN environment variable is not set"
            exit 1
          fi
          PAYLOAD=$(echo '{"image": "'"$IMAGE_NAME"'"}')
          RESPONSE=$(curl --silent --write-out "HTTPSTATUS:%{http_code}" -X POST "$KOYEB_API_URL" \
            -H "Authorization: Bearer $KOYEB_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD")
          HTTP_STATUS=$(echo "$RESPONSE" | awk -F'HTTPSTATUS:' '{print $2}')
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "Failed to trigger redeployment for service $SERVICE_ID. HTTP Status: $HTTP_STATUS"
            exit 1
          fi
          echo "Successfully triggered redeployment for service $SERVICE_ID with image $IMAGE_NAME"
